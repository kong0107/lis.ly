{"version":3,"sources":["libs/utilities.js","components/LawList.js","components/Law.js","components/App.js","serviceWorker.js","index.js"],"names":["fetch2","input","init","Promise","resolve","reject","fetch","then","res","ok","ReferenceError","statusText","catch","errorHandler","_console","console","error","apply","arguments","LawList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","query","laws","_this2","text","csv","records","CSVParse","skip_empty_lines","columns","shift","setState","eh","_this3","q","trim","matchedLaws","filter","law","name","indexOf","react_default","a","createElement","onInput","se","target","value","placeholder","length","map","key","id","Link","to","concat","React","Component","Law","versions","types","law_data","match","params","json","window","location","hash","law_reasons","_loop","number","find","item","rule_no","reason","content","title","deprecated_reason","className","split","line","index","renderContentItem","section_name","m","level","note","keys","relates","type","renderRelates","groups","articlesInOneLaw","articles","numbers","num","law_no","i","splice","law_name","App","BrowserRouter","basename","Switch","Route","path","exact","component","href","Boolean","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a67dfa2.chunk.js","sourcesContent":["export const fetch2 = (input, init) =>\n  new Promise((resolve, reject) =>\n    fetch(input, init)\n    .then(res => res.ok ? resolve(res) : reject(new ReferenceError(res.statusText)))\n    .catch(reject)\n  )\n;\n\nexport const errorHandler = (...args) =>\n    console.error(...args)\n;\n","import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport CSVParse from 'csv-parse/lib/sync';\n\nimport {\n  fetch2,\n  errorHandler as eh\n} from '../libs/utilities';\n\nexport default class LawList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      laws: []\n    };\n  }\n\n  componentDidMount() {\n    fetch2('https://cdn.jsdelivr.net/gh/kong0107/lis.ly@catalogue/laws.csv')\n    .then(res => res.text())\n    .then(csv => {\n      const records = CSVParse(csv, {\n        skip_empty_lines: true,\n        columns: ['id', 'name', 'type']\n      });\n      records.shift(); // removes the first line\n      this.setState({laws: records});\n    })\n    .catch(eh);\n  }\n\n  render() {\n    const q = this.state.query.trim();\n    const matchedLaws = q\n      ? this.state.laws.filter(law => law.name.indexOf(q) !== -1)\n      : this.state.laws\n    ;\n    return (\n      <div>\n        <input\n          onInput={se => this.setState({query: se.target.value})}\n          placeholder=\"搜尋名稱\"\n        />\n        <div>{q ? '找到' : '共有'} {matchedLaws.length} 部法律</div>\n        <ul>\n          {matchedLaws.map(law =>\n            <li key={law.id}>\n              <code>{law.id}</code>\n              <Link to={`/laws/${law.id}`}>{law.name}</Link>\n            </li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport {\n  fetch2,\n  errorHandler as eh\n} from '../libs/utilities';\n\nimport '../styles/Law.css';\n\nexport default class Law extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      law: {\n        versions: [],\n        types: [],\n        law_data: []\n      }\n    }\n  }\n\n  componentDidMount() {\n    fetch2(`https://cdn.jsdelivr.net/gh/kong0107/lis.ly@json/${this.props.match.params.id}.json`)\n    .then(res => res.json())\n    .then(law => {\n      this.setState({law});\n      if(window.location.hash) {\n        const hash = window.location.hash;\n        window.location.hash = '';\n        window.location.hash = hash;\n      }\n\n      if(law.law_reasons) {\n        for(let number in law.law_reasons) {\n          law.law_data\n          .find(item => item.rule_no === number)\n          .reason = law.law_reasons[number];\n        }\n      }\n    })\n    .catch(eh);\n  }\n\n  render() {\n    const law = this.state.law;\n    const q = this.state.query.trim();\n    const content = q\n      ? law.law_data.filter(item => item.content && (item.content.indexOf(q) !== -1))\n      : law.law_data\n    ;\n    return (\n      <div>\n        <h1>{law.title}</h1>\n        {law.deprecated_reason &&\n          <div className=\"deprecation\">\n            <strong>已廢止</strong>\n            {law.deprecated_reason.split('\\n').map((line, index) => <p key={index}>{line.trim()}</p>)}\n          </div>\n        }\n        <input\n          onInput={se => this.setState({query: se.target.value})}\n          placeholder=\"搜尋法條\"\n        />\n        {content.map(renderContentItem)}\n      </div>\n    );\n  }\n};\n\nconst renderContentItem = item => {\n  if(item.section_name) {\n    const m = item.section_name.match(/第[一二三四五六七八九十]+([編章節款目])/);\n    const level = '編章節款目'.indexOf(m[1]) + 2;\n    return React.createElement('h' + level, {key: item.section_name}, item.section_name);\n  }\n  const key = item.rule_no || 'preamble';\n  return (\n    <article key={key} id={key}>\n      <header>\n        <span className=\"rule_no\">{item.rule_no}</span>\n        <span className=\"note\">{item.note}</span>\n      </header>\n      <ol>\n        {item.content.split('\\n').map((line, index) =>\n          <li key={index}\n            className=\"articleLine\"\n          >{line.trim()}</li>\n        )}\n      </ol>\n      {Object.keys(item.relates).map(type => renderRelates(item.relates[type], type))}\n      {item.reason && // TODO: 這沒出來？\n        <div>\n          <header>修正理由</header>\n          {item.reason.split('\\n').map((line, index) => <p key={index}>{line}</p>)}\n        </div>\n      }\n    </article>\n  );\n};\n\nconst renderRelates = (groups, type) => {\n  return (\n    <dl key={type}>\n      <dt>{type}</dt>\n      {groups.map(articlesInOneLaw => {\n        const articles = articlesInOneLaw.numbers.map(num =>\n          // 連結無效？\n          <Link key={num}\n            to={`/laws/${articlesInOneLaw.law_no}#${num}`}\n          >{num}</Link>\n        );\n        for(let i = articles.length - 1; i > 0; --i)\n          articles.splice(i, 0, '、');\n        return (\n          <dd key={articlesInOneLaw.law_no}>\n            <Link to={`/laws/${articlesInOneLaw.law_no}`}>{articlesInOneLaw.law_name}</Link>\n            ：{articles}\n          </dd>\n        );\n      })}\n    </dl>\n  );\n};\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link\n} from \"react-router-dom\";\n\nimport LawList from './LawList';\nimport Law from './Law';\n\nimport '../styles/App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/lis.ly/\">\n        <div className=\"App\">\n          <header>\n            <Link className=\"App-link\" to=\"/\">法律查詢</Link>\n          </header>\n          <main>\n            <Switch>\n              <Route path=\"/\" exact component={LawList} />\n              <Route path=\"/laws/:id\" component={Law} />\n            </Switch>\n          </main>\n          <footer>\n            <a className=\"App-footer-link\" href=\"https://github.com/kong0107/lis.ly\">開放資料及擷取程式</a>\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}